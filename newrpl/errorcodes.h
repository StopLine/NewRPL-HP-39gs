#ifndef ERRORCODES_H
#define ERRORCODES_H

// THIS HEADER EXPORTS ALL KNOWN ERROR CODES IN USE
// LIBRARIES USE THE ERROR CODES, THE EXTERNAL UI PROVIDES
// TRANSLATABLE TEXT FOR EACH OF THESE ERRORS
// THE RPL CORE DOES NOT PROVIDE A TEXT MESSAGE

// ERROR CODES ARE OPCODES OF THE LIBRARY LIBERROR
// THEY ARE ENCODED USING SINT NUMBER BY THE MACRO MAKEMSG(lib,error)

// LIBRARY 0 IS USED FOR BASIC SYSTEM MESSAGES (COMPILER ERRORS, ETC.)
// THAT DON'T BELONG TO ANY LIBRARY IN PARTICULAR
// ALL OTHER ERRORS SHOULD BE ASSIGNED TO THEIR RESPECTIVE LIBRARIES

enum AllErrors {
    // EXECUTION ERRORS
    ERR_EXITRPL = MAKEMSG(DOCOL,0),
    ERR_BKPOINT = MAKEMSG(DOCOL,1),
    ERR_PROGRAMEXPECTED = MAKEMSG(DOCOL,2),

    // COMPILER/DECOMPILER AND GENERAL CORE ERRORS
    ERR_NOTALLOWEDINSYMBOLICS = MAKEMSG(0,1),
    ERR_ENDWITHOUTSTART = MAKEMSG(0,2),
    ERR_MISSINGBRACKET = MAKEMSG(0,3),
    ERR_BADARGCOUNT = MAKEMSG(0,4),
    ERR_BADARGTYPE = MAKEMSG(0,5),
    ERR_SYNTAXERROR = MAKEMSG(0,6),
    ERR_INVALIDTOKEN = MAKEMSG(0,7),
    ERR_STARTWITHOUTEND = MAKEMSG(0,8),
    ERR_MALFORMEDOBJECT = MAKEMSG(0,9),
    ERR_INVALIDOPERATORINSYMBOLIC = MAKEMSG(0,10),
    ERR_INVALIDOBJECT = MAKEMSG(0,11),
    ERR_INVALIDOPCODE = MAKEMSG(0,12),
    ERR_MISSINGLIBRARY = MAKEMSG(0,13),
    ERR_INTERNALEMPTYSTACK = MAKEMSG(0,14),

    // IDENTIFIERS AND VARIABLES
    ERR_IDENTEXPECTED = MAKEMSG(DOIDENT,0),
    ERR_UNDEFINEDVARIABLE = MAKEMSG(DOIDENT,1),
    ERR_CIRCULARREFERENCE = MAKEMSG(DOIDENT,2),

    // DIRECTORIES AND VARIABLES
    ERR_NONEMPTYDIRECTORY = MAKEMSG(DODIR,0),
    ERR_DIRECTORYNOTFOUND = MAKEMSG(DODIR,1),

    // INTEGER NUMBERS
    ERR_INTEGEREXPECTED = MAKEMSG(DOBINT,0),
    ERR_INTEGERSNOTSUPPORTED = MAKEMSG(DOBINT,1),

    // REAL NUMBERS
    ERR_REALEXPECTED = MAKEMSG(DOREAL,0),
    ERR_REALSNOTSUPPORTED = MAKEMSG(DOREAL,1),
    ERR_MATHUNDEFINED = MAKEMSG(DOREAL,2),
    ERR_NUMBERTOOBIG = MAKEMSG(DOREAL,3),
    ERR_MATHDIVIDEBYZERO = MAKEMSG(DOREAL,4),

    // COMPLEX NUMBERS
    ERR_COMPLEXEXPECTED = MAKEMSG(DOCMPLX,0),
    ERR_COMPLEXORREALEXPECTED = MAKEMSG(DOCMPLX,1),
    ERR_COMPLEXNOTSUPPORTED = MAKEMSG(DOCMPLX,2),

    // STRINGS
    ERR_STRINGEXPECTED = MAKEMSG(DOSTRING,0),

    // LISTS
    ERR_LISTEXPECTED = MAKEMSG(DOLIST,0),
    ERR_INDEXOUTOFBOUNDS = MAKEMSG(DOLIST,1),
    ERR_EMPTYLIST = MAKEMSG(DOLIST,2),
    ERR_INVALIDLISTSIZE = MAKEMSG(DOLIST,3),


//    ERR_ = MAKEMSG(  ,  ),


};








#endif // ERRORCODES_H

