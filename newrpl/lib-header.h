
// DON'T TOUCH THESE, THEY AUTOMATICALLY NAME ALL LIBRARY DATA
#define LIB_ENUM EVAL2(DEFER2(CAT)(EVAL1(DEFER1(CAT)(lib,LIBRARY_NUMBER)),enum))
#define LIB_CMDS EVAL2(DEFER2(CAT)(EVAL1(DEFER1(CAT)(lib,LIBRARY_NUMBER)),cmds))
#define LIB_NAMES EVAL2(DEFER2(CAT)(EVAL1(DEFER1(CAT)(lib,LIBRARY_NUMBER)),names))
#define LIB_ERRORS EVAL2(DEFER2(CAT)(EVAL1(DEFER1(CAT)(lib,LIBRARY_NUMBER)),errors))
#define LIB_TOKENINFO EVAL2(DEFER2(CAT)(EVAL1(DEFER1(CAT)(lib,LIBRARY_NUMBER)),tokeninfo))
#define LIB_HANDLER EVAL2(DEFER2(CAT)(EVAL1(DEFER1(CAT)(lib,LIBRARY_NUMBER)),_handler))
#define LIB_HELPTABLE EVAL2(DEFER2(CAT)(EVAL1(DEFER1(CAT)(lib,LIBRARY_NUMBER)),_cmdhelp))
#define LIB_MSGTABLE EVAL2(DEFER2(CAT)(EVAL1(DEFER1(CAT)(lib,LIBRARY_NUMBER)),_msgtable))
#define LIB_NUMBEROFCMDS EVAL2(DEFER2(CAT)(EVAL1(DEFER1(CAT)(LIB,LIBRARY_NUMBER)),_NUMBEROFCMDS))
#define LIB_NUMBEROFERRORS EVAL2(DEFER2(CAT)(EVAL1(DEFER1(CAT)(LIB,LIBRARY_NUMBER)),_NUMBEROFERRORS))
#define ROMPTR_TABLE    EVAL1(DEFER1(CAT)(romptr_table,LIBRARY_NUMBER))


// ***** INTERNAL DECLARATIONS - DO NOT CHANGE! *****



// IF COMMANDS_ONLY_PASS IS DEFINED, WE ARE NOT SUPPOSED TO
// DEFINE ANYTHING OTHER THAN THE COMMANDS ENUM
// SO EVERYTHING ELSE IS CONDITIONAL COMPILATION
#ifdef COMMANDS_ONLY_PASS
#ifdef COMMAND_LIST
// CREATE AN ENUM WITH THE OPCODE NAMES FOR THE switch() DISPATCHER
#define CMD(a,b) a
#define ECMD(a,b,c) a
enum LIB_ENUM { COMMAND_LIST , LIB_NUMBEROFCMDS };
#undef CMD
#undef ECMD

// CREATE AN ENUM WITH THE OPCODE NAMES FOR THE DISPATCHER
#define CMD(a,b) CMD_##a = MKOPCODE(LIBRARY_NUMBER,a)
#define ECMD(a,b,c) CMD_##a = MKOPCODE(LIBRARY_NUMBER,a)
enum LIB_CMDS { COMMAND_LIST  };
#undef CMD
#undef ECMD
#endif


// CREATE AN ENUM WITH THE LIST OF ALL ERRORS DEFINED BY THE LIBRARY
#ifdef ERROR_LIST
#define ERR(a,b) ERR_##a = MAKEMSG(LIBRARY_NUMBER,b)
enum LIB_ERRORS { ERROR_LIST , LIB_NUMBEROFERRORS };
#undef ERR
#endif







// AND EXPORT A DECLARATION OF THE LIBRARY HANDLER

void LIB_HANDLER();


// CLEANUP FOR OTHER LIBRARIES TO DEFINE THEIR OWN

#undef LIBRARY_NUMBER
#undef COMMAND_LIST
#undef ERROR_LIST
#undef LIBRARY_ASSIGNED_NUMBERS

#undef LIB_ENUM
#undef LIB_CMDS
#undef LIB_NAMES
#undef LIB_TOKENINFO
#undef LIB_HANDLER
#undef LIB_HELPTABLE
#undef LIB_MSGTABLE
#undef LIB_NUMBEROFCMDS
#undef LIB_NUMBEROFERRORS
#undef ROMPTR_TABLE



#else

#ifdef COMMAND_LIST
// AND A LIST OF STRINGS WITH THE NAMES FOR THE COMPILER
#define CMD(a,b) #a
#define ECMD(a,b,c) b
const char * const LIB_NAMES[]= { COMMAND_LIST };
#undef CMD
#undef ECMD

// AND A LIST WITH THE SYMBOLIC TOKENINFO DATA
#define CMD(a,b) b
#define ECMD(a,b,c) c
const BINT const LIB_TOKENINFO[]={ COMMAND_LIST };
#undef ECMD
#undef CMD
#endif
// LIST OF LIBRARY NUMBERS WHERE THIS LIBRARY REGISTERS TO
// HAS TO BE A HALFWORD LIST TERMINATED IN ZERO
static const HALFWORD const libnumberlist[]={ LIBRARY_ASSIGNED_NUMBERS , 0 };



#endif

// ***** END INTERNAL DECLARATIONS *****


