@ Typical RPL symbols to copy/paste:
@ « » →
@ Stack diagram symbols:
@ I = Integer number
@ R = Real number
@ Z = Complex number
@ S = String
@ L = List
@ U = Unit object
@ V = Vector
@ M = Matrix
@ N = Variable name
@ O = Any object
@ P = Program
@ A = Algebraic object (symbolic)


@#name lib64_msgtable
{
##1,ERR_VECTOROFNUMBERSEXPECTED "Vector of Numbers expected"
##1,ERR_ERR2 "Error Message 2"
}

@#name lib64_menu
{
  FLOOR CEIL IP FP !
  MOD SQ  % %CH %T
  MANT XPON SIGN SETPREC GETPREC
  GCD LCM IDIV2 IQUOT { "" }
  MODSTO MODRCL { "" } { "" } { "" }
  ADDTMOD SUBTMOD MULTMOD POWMOD { "" }
  NEXTPRIME ISPRIME? { "" } { "" } { "" }
  PEVAL
}

@#name lib64_cmdhelp
{
FLOOR
"GREATEST INTEGER THAT IS LESS
THAN OR EQUAL TO THE ARGUMENT
R → I"
CEIL
"SMALLEST INTEGER THAT IS GREATER
 THAN OR EQUAL TO THE ARGUMENT
R → I"
IP
"INTEGER PART
OF THE ARGUMENT
R → I"
FP
"FRACTIONAL PART
OF THE ARGUMENT
→ "
!
"Factorial

I → I"
MOD
"MODULO
X-Y*FLOOR(X/Y)
O → O"
SQ
"square

O → O"
%
"PERCENT
X*Y/100
O O → R"
%CH
"PERCENT CHANGE
100*(Y–X)/X
O O → R"
%T
"PERCENT OF TOTAL
100*Y/X
O O → R"
MANT
"MANTISSA OF THE ARGUMENT

R → R"
XPON
"EXPONENT OF THE ARGUMENT

R → I"
SIGN
"SIGN OF A REAL NUMBER

R → I"
SETPREC
"SET PRECISION

I → "
GETPREC
"GET CURRENT PRECISION

→ I"
GCD
"GREATEST COMMON DIVISOR
OF TWO OBJECTS
I I → I"
LCM
"LEAST COMMON MULTIPLE
OF TWO OBJECTS
I I → I"
IDIV2
"INTEGER PART OF A/B,
AND THE REMAINDER R
I I → I I"
IQUOT
"RETURNS THE EUCLIDEAN QUOTIENT
OF TWO INTEGERS
I I → I"
MODSTO
"CHANGES THE MODULO SETTING
TO THE SPECIFIED NUMBER
I →"
MODRCL
"RETURNS THE MODULO SETTING

→ O"
ADDTMOD
"ADDITION OF TWO OBJECTS
MODULO THE CURRENT MODULUS
O O → O"
SUBTMOD
"SUBTRACTION OF TWO OBJECTS
MODULO THE CURRENT MODULUS
O O → O"
MULTMOD
"MULTIPLICATION OF TWO OBJECTS
MODULO THE CURRENT MODULUS
O O → O"
POWMOD
"RAISES THE OBJECT TO THE EXPONENT
MODULO THE CURRENT MODULUS
O O → O"
NEXTPRIME
"NEXT PRIME NUMBER LARGER
THAN THE INTEGER
I → I"
ISPRIME?
"TESTS IF A NUMBER IS PRIME

I → I"
PEVAL
"EVALUATE POLYNOME
V R → R"
}

